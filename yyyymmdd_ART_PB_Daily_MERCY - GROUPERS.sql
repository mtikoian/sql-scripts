/*
Payments and Adjustments ART SQL Code
Background:     This code was created by Ejay to the specifications
                requested by Crowe Horwath
Modifications:  07/13/2016  Creation Date
*/

DECLARE @START_DATE AS DATE = EPIC_UTIL.EFN_DIN('2/28/2017')
DECLARE @END_DATE AS DATE = EPIC_UTIL.EFN_DIN('2/28/2017')

SELECT    COMPANY_CODE
         ,ACCOUNT_NUMBER
         ,ACCOUNT_TYPE
         ,TRANSACTION_AMOUNT
         ,POSTING_DATE
         ,SERVICE_DATE
         ,ADMITING_DATE
         ,DISCHARGE_DATE
         ,TRANSACTION_CODE
         ,TECHNICAL_DESCRIPTION
         ,FINANCIAL_CLASS
         ,TRANSACTION_INSURANCE_CODE
         ,TOTAL_CHARGES
         ,UNIT_NUMBER
         ,UNIT_DATE
         ,PATIENT_TYPE
         ,BILLING_PROVIDER


FROM
-- START LOOP TO SUM UP DETAIL TO THEN EXCLUDE 0 SUM TRANS
(
SELECT    COMPANY_CODE
         ,ACCOUNT_NUMBER
         ,ACCOUNT_TYPE
         ,SUM(TRANSACTION_AMOUNT) AS TRANSACTION_AMOUNT
         ,POSTING_DATE
         ,SERVICE_DATE
         ,ADMITING_DATE
         ,DISCHARGE_DATE
         ,TRANSACTION_CODE
         ,TECHNICAL_DESCRIPTION
         ,FINANCIAL_CLASS
         ,TRANSACTION_INSURANCE_CODE
         ,MAX(TOTAL_CHARGES) AS TOTAL_CHARGES
         ,UNIT_NUMBER
         ,UNIT_DATE
         ,PATIENT_TYPE
         ,BILLING_PROVIDER


FROM
-- START LOOP FOR DETAIL AT LINE ITEM
(
SELECT    coalesce((cast(dep2.dept_id as varchar)), '000000000') AS COMPANY_CODE
         ,COALESCE(CAST(TDL.TX_ID AS VARCHAR(10)),'000000000') + '-' + COALESCE(CAST(TDL.ACCOUNT_ID AS VARCHAR(10)),'000000000') AS ACCOUNT_NUMBER
         ,'O' AS ACCOUNT_TYPE
         ,TDL.AMOUNT AS TRANSACTION_AMOUNT
         ,COALESCE(CONVERT(VARCHAR(10), CAST(TDL.POST_DATE AS DATE), 101),'01/01/1900') AS POSTING_DATE
         ,COALESCE(CONVERT(VARCHAR(10), CAST(TDL.ORIG_SERVICE_DATE AS DATE), 101),'01/01/1900') AS SERVICE_DATE
         ,COALESCE(CONVERT(VARCHAR(10), CAST(TDL.ORIG_SERVICE_DATE AS DATE), 101),'01/01/1900') AS ADMITING_DATE
         ,COALESCE(CONVERT(VARCHAR(10), CAST(TDL.ORIG_SERVICE_DATE AS DATE), 101),'01/01/1900') AS DISCHARGE_DATE
         ,(CASE WHEN TDL.DETAIL_TYPE IN (2,5,11,32,33,3,12,4,6,13,30,31,1,10)
                  THEN CLARITY_EAP.PROC_CODE
                ELSE CLARITY_EAP2.PROC_CODE
          END) AS TRANSACTION_CODE
         ,(CASE WHEN TDL.DETAIL_TYPE IN (2,5,11,32,33,3,12,4,6,13,30,31,1,10)
                  THEN CLARITY_EAP.PROC_NAME
                ELSE CLARITY_EAP2.PROC_NAME
           END) AS TECHNICAL_DESCRIPTION
        ,TDL.CUR_FIN_CLASS
               AS FINANCIAL_CLASS
        ,COALESCE(CONVERT(VARCHAR(10),TDL.CUR_PLAN_ID),'') AS TRANSACTION_INSURANCE_CODE
        ,(CASE WHEN TDL.DETAIL_TYPE NOT IN (20,21)
                THEN 0
              ELSE COALESCE(TDL.ORIG_AMT,0)
         END) AS TOTAL_CHARGES
        ,'' AS UNIT_NUMBER
        ,'' AS UNIT_DATE
        ,'102' AS PATIENT_TYPE
        ,COALESCE(CONVERT(VARCHAR(10),TDL.BILLING_PROVIDER_ID),'') AS BILLING_PROVIDER
	

FROM       CLARITY_TDL_TRAN TDL
           LEFT JOIN ZC_DETAIL_TYPE             ON TDL.DETAIL_TYPE         = ZC_DETAIL_TYPE.DETAIL_TYPE
           LEFT JOIN CLARITY_EAP CLARITY_EAP    ON TDL.PROC_ID             = CLARITY_EAP.PROC_ID
           LEFT JOIN CLARITY_EAP CLARITY_EAP2   ON TDL.MATCH_PROC_ID       = CLARITY_EAP2.PROC_ID
           LEFT JOIN ACCOUNT GUAR               ON TDL.ACCOUNT_ID          = GUAR.ACCOUNT_ID
		   LEFT JOIN CLARITY_DEP dep on dep.department_id = tdl.dept_id
		   LEFT JOIN claritychputil.rpt.v_pb_department dep2 on dep2.dept_id = dep.rpt_grp_one

WHERE
  --All Payment and Adjustment Detail Types
  TDL.DETAIL_TYPE IN (3,12,2,5,11,20,22,32,33,4,6,13,21,23,30,31)
  --Just Originating Payment and Adjustment Detail Types
  --TDL.DETAIL_TYPE IN (2,5,11,3,12,4,6,13)
  --Just Matching Detail Types
  --TDL.DETAIL_TYPE IN (20,22,32,33,21,23,30,31)
  --All Charge Detail Types
  --CLARITY_TDL.DETAIL_TYPE IN (1,10)
AND TDL.SERV_AREA_ID in (11,13,16,17,18,19)
AND TDL.AMOUNT <> 0
AND TDL.POST_DATE >= @START_DATE
AND TDL.POST_DATE <= @END_DATE



)a
-- END LOOP FOR DETAIL AT LINE ITEM
GROUP BY  COMPANY_CODE
         ,ACCOUNT_NUMBER
         ,ACCOUNT_TYPE
         ,POSTING_DATE
         ,SERVICE_DATE
         ,ADMITING_DATE
         ,DISCHARGE_DATE
         ,TRANSACTION_CODE
         ,TECHNICAL_DESCRIPTION
         ,FINANCIAL_CLASS
         ,TRANSACTION_INSURANCE_CODE
         ,UNIT_NUMBER
         ,UNIT_DATE
         ,PATIENT_TYPE
         ,BILLING_PROVIDER

)b
-- START LOOP TO SUM UP DETAIL TO THEN EXCLUDE 0 SUM TRANS
WHERE    TRANSACTION_AMOUNT <> 0

order by ACCOUNT_NUMBER
