WITH ATBACCTS AS
(SELECT     TDL.TX_ID AS TX_ID
           ,(CASE WHEN TDL.BILL_AREA_ID IS NOT NULL THEN TDL.BILL_AREA_ID ELSE 620004096 END) AS COMPANY_CODE
		       ,TO_CHAR(TDL.HSP_ACCOUNT_ID) || '-' || TO_CHAR(TDL.TX_ID) AS ACCOUNT_NUMBER
		       ,TO_CHAR(TDL.HSP_ACCOUNT_ID) AS PARENT_ACCOUNT_NUMBER
		       ,'O' AS ACCOUNT_TYPE
		       ,PATIENT.PAT_MRN_ID AS MEDICAL_RECORD_NUMBER
		       ,UPPER(PATIENT.PAT_LAST_NAME) AS LAST_NAME
		       ,UPPER(PATIENT.PAT_FIRST_NAME) AS FIRST_NAME
		       ,UPPER(SUBSTR( PATIENT.PAT_MIDDLE_NAME, 1, 1 ))  AS MIDDLE_INITIAL
		       ,PATIENT.BIRTH_DATE AS BIRTH_DATE
		       ,PATIENT.SSN AS SOCIAL_SECURITY_NUMBER
           ,Nvl(SNP.ACCT_CLASS_HA_C,2) AS PATIENT_TYPE_CODE
		       ,'' AS HOSPITAL_SERVICE_CODE
		       ,TDL.ORIG_SERVICE_DATE AS ADMIT_DATE
		       ,TDL.ORIG_SERVICE_DATE AS DISCHARGE_DATE
           ,(CASE WHEN ACCOUNT.ACCOUNT_TYPE_C IN (4,104,108,112) THEN '900'
                  WHEN TDL.CUR_FIN_CLASS = 4 THEN ''
                  WHEN TDL.CUR_PLAN_ID IS NULL THEN ''
                  ELSE TO_CHAR(TDL.CUR_FIN_CLASS)
            END) AS CURRENT_FINANCIAL_CLASS
          ,(CASE WHEN ACCOUNT.ACCOUNT_TYPE_C IN (4,104,108,112) THEN '900'
                 WHEN TDL.ORIGINAL_FIN_CLASS = 4 THEN ''
                 WHEN TDL.ORIGINAL_PLAN_ID IS NULL THEN ''
                 ELSE TO_CHAR(ORIGINAL_FIN_CLASS)
           END) AS FINANCIAL_CLASS_CODE_1
         ,(CASE WHEN TDL.ORIGINAL_FIN_CLASS = TDL.CUR_FIN_CLASS THEN ''
                ELSE (CASE WHEN ACCOUNT.ACCOUNT_TYPE_C IN (4,104,108,112) THEN '900'
                           WHEN TDL.CUR_FIN_CLASS = 4 THEN ''
                           ELSE TO_CHAR(TDL.CUR_FIN_CLASS)
                     END)
          END) AS FINANCIAL_CLASS_CODE_2
		     ,'' AS FINANCIAL_CLASS_CODE_3
		     ,'' AS FINANCIAL_CLASS_CODE_4
		     ,'' AS FINANCIAL_CLASS_CODE_5
         ,TO_CHAR(TDL.CUR_PLAN_ID) AS CURRENT_INS_CODE
         ,TO_CHAR(TDL.ORIGINAL_PLAN_ID) AS INSURANCE_CODE_1
         ,(CASE WHEN TDL.CUR_PLAN_ID = TDL.ORIGINAL_PLAN_ID THEN ''
                ELSE TO_CHAR(TDL.CUR_PLAN_ID)
          END) AS INSURANCE_CODE_2
		    ,'' AS INSURANCE_CODE_3
		    ,'' AS INSURANCE_CODE_4
		    ,'' AS INSURANCE_CODE_5
        ,TO_CHAR(TDL.ORIGINAL_CVG_ID) AS INSURANCE_CVG_1
        ,(CASE WHEN TDL.ORIGINAL_CVG_ID = TDL.CUR_CVG_ID THEN ''
               WHEN TDL.ORIGINAL_CVG_ID <> TDL.CUR_CVG_ID THEN TO_CHAR(TDL.CUR_CVG_ID)
               ELSE ''
         END) AS INSURANCE_CVG_2
		   ,'' AS INSURANCE_CVG_3
		   ,'' AS INSURANCE_CVG_4
		   ,'' AS INSURANCE_CVG_5
       ,0 AS INSURANCE_3_PAYMENTS
		   ,0 AS INSURANCE_4_PAYMENTS
		   ,0 AS INSURANCE_5_PAYMENTS
       ,0 AS INSURANCE_3_BALANCE
		   ,0 AS INSURANCE_4_BALANCE
		   ,0 AS INSURANCE_5_BALANCE
       ,TDL.PATIENT_AMOUNT AS PATIENT_BALANCE
       ,TDL.TRAN_TYPE
		   ,(CASE WHEN TDL.TRAN_TYPE <> 2 THEN TDL.ORIG_AMT
              ELSE 0
        END) AS TOTAL_CHARGES
		   ,TDL.ACTIVE_AR_AMOUNT AS ACCOUNT_BALANCE
		   ,'' AS EXPECTED_REVENUE
		   ,'' AS PRIMARY_DRG
		   ,ACCOUNT.ACCOUNT_NAME AS PATIENT_REPRESENTATIVE
		   ,TDL.BILLING_PROVIDER_ID AS PHYSICIAN_CODE
		   ,TDL.ORIGINAL_CVG_ID AS ORIGINAL_CVG_ID
		   ,TDL.CUR_CVG_ID AS CURRENT_CVG_ID
		   ,TDL.INSURANCE_AMOUNT AS INSURANCE_AMOUNT
		   ,CLARITY_EPM_ORIG.GL_PREFIX AS ORIGINAL_FINANCIAL_CLASS
		   ,TDL.ORIGINAL_PAYOR_ID AS ORIGINAL_PAYOR_ID
		   ,TDL.POST_DATE AS POST_DATE
		   ,ACCOUNT.ACCOUNT_TYPE_C
		   ,ZC_ACCOUNT_TYPE.NAME AS ACCOUNT_TYPE_NAME
       ,SNP.COL_AGNCY_ID AS RESPONSIBILITY_CODE

FROM   CLARITY.CLARITY_TDL_AGE TDL
       LEFT JOIN CLARITY.ACCOUNT ON TDL.ACCOUNT_ID = ACCOUNT.ACCOUNT_ID
	     LEFT JOIN CLARITY.ZC_ACCOUNT_TYPE ON ZC_ACCOUNT_TYPE.ACCOUNT_TYPE_C = ACCOUNT.ACCOUNT_TYPE_C
	     LEFT JOIN CLARITY.CLARITY_EPM CLARITY_EPM_ORIG ON CLARITY_EPM_ORIG.PAYOR_ID = TDL.ORIGINAL_PAYOR_ID
	     LEFT JOIN CLARITY.CLARITY_EPM CLARITY_EPM_CUR ON CLARITY_EPM_CUR.PAYOR_ID = TDL.CUR_PAYOR_ID
	     LEFT JOIN CLARITY.PATIENT ON TDL.INT_PAT_ID = PATIENT.PAT_ID
	     LEFT JOIN CLARITY.CLARITY_SA ON TDL.SERV_AREA_ID = CLARITY_SA.SERV_AREA_ID
       LEFT JOIN CLARITY.CLARITY_LOC ON CLARITY_LOC.LOC_ID = TDL.LOC_ID
       LEFT JOIN CLARITY.CLARITY_DEP ON CLARITY_DEP.DEPARTMENT_ID = TDL.DEPT_ID
       LEFT JOIN HSP_HAR_SNAPSHOT SNP ON TDL.HSP_ACCOUNT_ID = SNP.HSP_ACCOUNT_ID AND trunc(LAST_DAY(ADD_MONTHS(sysdate, -1))) BETWEEN TRUNC(SNP.SNAP_START_DATE) AND TRUNC(SNP.SNAP_END_DATE)
WHERE  TDL.POST_DATE = trunc(LAST_DAY(ADD_MONTHS(sysdate, -1)))
   AND NVL(TDL.ACTIVE_AR_AMOUNT, 0) <> 0
),
UNDACCTPMTS AS
(SELECT  TDL.TX_ID
        ,TDL.TRAN_TYPE
        ,SUM(TDL.PATIENT_AMOUNT) AS PMT_PAT_AMT
        ,SUM(TDL.INSURANCE_AMOUNT) AS PMT_INS_AMT
        ,SUM(TDL.AMOUNT) AS PMT_TTL_AMT
        ,SUM(TDL.ACTIVE_AR_AMOUNT) AS PMT_AR_BAL

FROM CLARITY_TDL_TRAN TDL
JOIN ATBACCTS ATB ON TDL.TX_ID = ATB.TX_ID

WHERE TDL.DETAIL_TYPE < 39
  AND TDL.POST_DATE <= trunc(LAST_DAY(ADD_MONTHS(sysdate, -1)))
GROUP BY TDL.TX_ID, TDL.TRAN_TYPE
),
CHGINSPMTS AS
(SELECT  ATB.ACCOUNT_NUMBER
        ,TDL.TRAN_TYPE
        ,TDL.MATCH_TRX_ID
        ,TDL.MATCH_TX_TYPE
        ,MTCH.MTCH_TX_HX_D_CVG_ID
        ,SUM(TDL.PATIENT_AMOUNT * -1) AS PMT_PAT_AMT
        ,SUM(TDL.INSURANCE_AMOUNT * -1) AS PMT_INS_AMT
        ,SUM(TDL.AMOUNT * -1) AS PMT_TTL_AMT

FROM CLARITY_TDL_TRAN TDL
JOIN ATBACCTS ATB ON TDL.MATCH_TRX_ID = ATB.TX_ID
LEFT JOIN ARPB_TX_MATCH_HX  MTCH ON TDL.MATCH_TRX_ID = MTCH.MTCH_TX_HX_ID
                                AND TDL.TX_ID = MTCH.TX_ID

WHERE TDL.DETAIL_TYPE IN (2,5,11,20,22,32,33)
  AND TDL.POST_DATE <= trunc(LAST_DAY(ADD_MONTHS(sysdate, -1)))
  AND ATB.TRAN_TYPE <> 2
GROUP BY TDL.TRAN_TYPE
        ,TDL.MATCH_TRX_ID
        ,TDL.MATCH_TX_TYPE
        ,ATB.ACCOUNT_NUMBER
        ,MTCH.MTCH_TX_HX_D_CVG_ID
),
ALLCHGPMTS AS
(SELECT  ATB.ACCOUNT_NUMBER
        ,SUM(TDL.PATIENT_AMOUNT * -1) AS PMT_PAT_AMT
        ,SUM(TDL.INSURANCE_AMOUNT * -1) AS PMT_INS_AMT
        ,SUM(TDL.AMOUNT * -1) AS PMT_TTL_AMT

FROM CLARITY_TDL_TRAN TDL
JOIN ATBACCTS ATB ON TDL.MATCH_TRX_ID = ATB.TX_ID
LEFT JOIN ARPB_TX_MATCH_HX  MTCH ON TDL.MATCH_TRX_ID = MTCH.MTCH_TX_HX_ID
                                AND TDL.TX_ID = MTCH.TX_ID

WHERE TDL.DETAIL_TYPE IN (2,5,11,20,22,32,33)
  AND TDL.POST_DATE <= trunc(LAST_DAY(ADD_MONTHS(sysdate, -1)))
  AND ATB.TRAN_TYPE <> 2
GROUP BY ATB.ACCOUNT_NUMBER
),
STMNTFRSTCLAIM AS
(SELECT     STM.TX_ID
           ,MIN(STM.BC_HX_DATE) FIRST_CLAIM_DATE
			FROM ARPB_TX_STMCLAIMHX STM
      JOIN ATBACCTS ATB ON STM.TX_ID = ATB.TX_ID
			WHERE STM.BC_HX_DATE <= TRUNC(LAST_DAY(ADD_MONTHS(SYSDATE, -1)))
      GROUP BY STM.TX_ID
)

SELECT      ATB.COMPANY_CODE
		       ,ATB.ACCOUNT_NUMBER
		       ,ATB.PARENT_ACCOUNT_NUMBER
		       ,ATB.ACCOUNT_TYPE
		       ,ATB.MEDICAL_RECORD_NUMBER
		       ,ATB.LAST_NAME
		       ,ATB.FIRST_NAME
		       ,ATB.MIDDLE_INITIAL
		       ,To_Char(ATB.BIRTH_DATE,'MM/DD/YYYY') BIRTH_DATE
		       ,ATB.SOCIAL_SECURITY_NUMBER
           ,ATB.PATIENT_TYPE_CODE
		       ,ATB.HOSPITAL_SERVICE_CODE
		       ,TO_CHAR(ATB.ADMIT_DATE, 'mm/dd/yyyy') AS ADMIT_DATE
		       ,TO_CHAR(ATB.DISCHARGE_DATE, 'mm/dd/yyyy') AS DISCHARGE_DATE
           ,(CASE	WHEN CLM.FIRST_CLAIM_DATE IS NULL THEN '01/01/1900'
		             ELSE TO_CHAR(CLM.FIRST_CLAIM_DATE, 'MM/DD/YYYY')
		        END) AS FIRST_BILL_DATE
           ,ATB.CURRENT_FINANCIAL_CLASS
           ,ATB.FINANCIAL_CLASS_CODE_1
           ,ATB.FINANCIAL_CLASS_CODE_2
		       ,ATB.FINANCIAL_CLASS_CODE_3
		       ,ATB.FINANCIAL_CLASS_CODE_4
		       ,ATB.FINANCIAL_CLASS_CODE_5
           ,ATB.CURRENT_INS_CODE
           ,ATB.INSURANCE_CODE_1
           ,ATB.INSURANCE_CODE_2
		       ,ATB.INSURANCE_CODE_3
		       ,ATB.INSURANCE_CODE_4
		       ,ATB.INSURANCE_CODE_5
           ,(CASE WHEN ATB.TRAN_TYPE <> 2 THEN COALESCE(PPM.PMT_INS_AMT,0)
                  WHEN ATB.TRAN_TYPE = 2  THEN COALESCE(UPM.PMT_INS_AMT,0)
                  ELSE 0
            END) AS INSURANCE_1_PAYMENTS
           ,(CASE WHEN ATB.TRAN_TYPE <> 2 THEN COALESCE(SPM.PMT_INS_AMT,0)
                  ELSE 0
            END) AS INSURANCE_2_PAYMENTS
           ,INSURANCE_3_PAYMENTS
		       ,INSURANCE_4_PAYMENTS
		       ,INSURANCE_5_PAYMENTS
           ,(CASE WHEN ATB.TRAN_TYPE <> 2 AND ATB.CURRENT_INS_CODE = ATB.INSURANCE_CODE_1 AND ATB.CURRENT_INS_CODE IS NOT NULL
                     THEN COALESCE(ATB.INSURANCE_AMOUNT,0)
                  WHEN ATB.TRAN_TYPE = 2
                     THEN COALESCE(ATB.INSURANCE_AMOUNT,0)
                  WHEN ATB.CURRENT_FINANCIAL_CLASS = 900
                     THEN COALESCE(ATB.INSURANCE_AMOUNT,0)
                  WHEN ATB.TRAN_TYPE <> 2 AND ATB.CURRENT_INS_CODE = ATB.INSURANCE_CODE_2 AND ATB.CURRENT_INS_CODE IS NOT NULL
                     THEN 0
                  ELSE COALESCE(ATB.INSURANCE_AMOUNT,0)
            END) AS INSURANCE_1_BALANCE
           ,(CASE WHEN ATB.TRAN_TYPE <> 2 AND ATB.CURRENT_INS_CODE = ATB.INSURANCE_CODE_2 AND ATB.CURRENT_INS_CODE IS NOT NULL
                     THEN COALESCE(ATB.INSURANCE_AMOUNT,0)
                  ELSE 0
            END) AS INSURANCE_2_BALANCE
           ,INSURANCE_3_BALANCE
		       ,INSURANCE_4_BALANCE
		       ,INSURANCE_5_BALANCE
           ,(CASE WHEN ATB.TRAN_TYPE <> 2
                     THEN COALESCE(APM.PMT_PAT_AMT,0)
                  ELSE COALESCE(UPM.PMT_PAT_AMT,0)
            END)AS PATIENT_PAYMENTS
           ,ATB.PATIENT_BALANCE
           ,ATB.TOTAL_CHARGES
           ,ATB.ACCOUNT_BALANCE
		       ,ATB.EXPECTED_REVENUE
		       ,ATB.PRIMARY_DRG
		       ,ATB.PATIENT_REPRESENTATIVE
           ,ATB.RESPONSIBILITY_CODE

FROM ATBACCTS ATB
LEFT JOIN STMNTFRSTCLAIM CLM ON ATB.TX_ID  = CLM.TX_ID
LEFT JOIN UNDACCTPMTS    UPM ON ATB.TX_ID  = UPM.TX_ID
LEFT JOIN CHGINSPMTS     PPM ON ATB.TX_ID  = PPM.MATCH_TRX_ID
                            AND ATB.INSURANCE_CVG_1 = PPM.MTCH_TX_HX_D_CVG_ID
LEFT JOIN CHGINSPMTS     SPM ON ATB.TX_ID  = SPM.MATCH_TRX_ID
                            AND ATB.INSURANCE_CVG_2 = SPM.MTCH_TX_HX_D_CVG_ID
LEFT JOIN ALLCHGPMTS     APM ON ATB.ACCOUNT_NUMBER  = APM.ACCOUNT_NUMBER


