/*
Payments and Adjustments ART SQL Code
Background:     This code was created by Ejay to the specifications
                requested by Crowe Horwath
Modifications:  07/13/2016  Creation Date
*/
SELECT    COMPANY_CODE
         ,ACCOUNT_NUMBER
         ,ACCOUNT_TYPE
         ,TRANSACTION_AMOUNT
         ,POSTING_DATE
         ,SERVICE_DATE
         ,ADMITING_DATE
         ,DISCHARGE_DATE
         ,TRANSACTION_CODE
         ,TECHNICAL_DESCRIPTION
         ,FINANCIAL_CLASS
         ,TRANSACTION_INSURANCE_CODE
         ,TOTAL_CHARGES
         ,UNIT_NUMBER
         ,UNIT_DATE
         ,PATIENT_TYPE
         ,HOSPITAL_SERVICE_CODE

FROM
-- START LOOP TO SUM UP DETAIL TO THEN EXCLUDE 0 SUM TRANS
(
SELECT    COMPANY_CODE
         ,ACCOUNT_NUMBER
         ,ACCOUNT_TYPE
         ,SUM(TRANSACTION_AMOUNT) AS TRANSACTION_AMOUNT
         ,POSTING_DATE
         ,SERVICE_DATE
         ,ADMITING_DATE
         ,DISCHARGE_DATE
         ,TRANSACTION_CODE
         ,TECHNICAL_DESCRIPTION
         ,FINANCIAL_CLASS
         ,TRANSACTION_INSURANCE_CODE
         ,MAX(TOTAL_CHARGES) AS TOTAL_CHARGES
         ,UNIT_NUMBER
         ,UNIT_DATE
         ,PATIENT_TYPE
         ,HOSPITAL_SERVICE_CODE

FROM
-- START LOOP FOR DETAIL AT LINE ITEM
(
SELECT    NVL(TDL.BILL_AREA_ID,620004096) AS COMPANY_CODE
         ,TDL.HSP_ACCOUNT_ID || '-' || TDL.TX_ID AS ACCOUNT_NUMBER
         ,'O' AS ACCOUNT_TYPE
         ,TDL.AMOUNT AS TRANSACTION_AMOUNT
         ,To_Char(TDL.POST_DATE,'MM/DD/YYYY') AS POSTING_DATE
         ,To_Char(TDL.ORIG_SERVICE_DATE,'MM/DD/YYYY') AS SERVICE_DATE
         ,To_Char(TDL.ORIG_SERVICE_DATE,'MM/DD/YYYY') AS ADMITING_DATE
         ,To_Char(TDL.ORIG_SERVICE_DATE,'MM/DD/YYYY') AS DISCHARGE_DATE
         ,(CASE WHEN TDL.DETAIL_TYPE IN (2,5,11,32,33,3,12,4,6,13,30,31,1,10)
                  THEN CLARITY_EAP.PROC_CODE
                ELSE CLARITY_EAP2.PROC_CODE
          END) AS TRANSACTION_CODE
         ,(CASE WHEN TDL.DETAIL_TYPE IN (2,5,11,32,33,3,12,4,6,13,30,31,1,10)
                  THEN CLARITY_EAP.PROC_NAME
                ELSE CLARITY_EAP2.PROC_NAME
           END) AS TECHNICAL_DESCRIPTION
        ,(CASE WHEN TDL.DETAIL_TYPE NOT IN (20,21)
                 THEN ''
              ELSE (CASE WHEN GUAR.ACCOUNT_TYPE_C IN (4,104,108,112) THEN '900'
                         WHEN TDL.CUR_FIN_CLASS = 4 THEN ''
                         WHEN TDL.CUR_PLAN_ID IS NULL THEN ''
                         ELSE TO_CHAR(TDL.CUR_FIN_CLASS)
                   END)
         END) AS FINANCIAL_CLASS
        ,TDL.CUR_PLAN_ID AS TRANSACTION_INSURANCE_CODE
        ,(CASE WHEN TDL.DETAIL_TYPE NOT IN (20,21)
                THEN 0
              ELSE COALESCE(TDL.ORIG_AMT,0)
         END) AS TOTAL_CHARGES
        ,'' AS UNIT_NUMBER
        ,'' AS UNIT_DATE
        ,Nvl(SNP.ACCT_CLASS_HA_C,2) AS PATIENT_TYPE
        ,'' AS HOSPITAL_SERVICE_CODE

FROM       CLARITY.CLARITY_TDL_TRAN TDL
           LEFT JOIN CLARITY.ZC_DETAIL_TYPE             ON TDL.DETAIL_TYPE         = ZC_DETAIL_TYPE.DETAIL_TYPE
           LEFT JOIN CLARITY.CLARITY_EAP CLARITY_EAP    ON TDL.PROC_ID             = CLARITY_EAP.PROC_ID
           LEFT JOIN CLARITY.CLARITY_EAP CLARITY_EAP2   ON TDL.MATCH_PROC_ID       = CLARITY_EAP2.PROC_ID
           LEFT JOIN CLARITY.HSP_HAR_SNAPSHOT SNP       ON TDL.HSP_ACCOUNT_ID      = SNP.HSP_ACCOUNT_ID
                                                           AND TDL.POST_DATE BETWEEN TRUNC(SNP.SNAP_START_DATE) AND TRUNC(SNP.SNAP_END_DATE)
           LEFT JOIN CLARITY.ACCOUNT GUAR               ON TDL.ACCOUNT_ID          = GUAR.ACCOUNT_ID

WHERE
  --All Payment and Adjustment Detail Types
  TDL.DETAIL_TYPE IN (3,12,2,5,11,20,22,32,33,4,6,13,21,23,30,31)
  --Just Originating Payment and Adjustment Detail Types
  --TDL.DETAIL_TYPE IN (2,5,11,3,12,4,6,13)
  --Just Matching Detail Types
  --TDL.DETAIL_TYPE IN (20,22,32,33,21,23,30,31)
  --All Charge Detail Types
  --CLARITY_TDL.DETAIL_TYPE IN (1,10)
AND TDL.AMOUNT <> 0
AND TDL.POST_DATE = Trunc(SYSDATE)-1
)
-- END LOOP FOR DETAIL AT LINE ITEM
GROUP BY  COMPANY_CODE
         ,ACCOUNT_NUMBER
         ,ACCOUNT_TYPE
         ,POSTING_DATE
         ,SERVICE_DATE
         ,ADMITING_DATE
         ,DISCHARGE_DATE
         ,TRANSACTION_CODE
         ,TECHNICAL_DESCRIPTION
         ,FINANCIAL_CLASS
         ,TRANSACTION_INSURANCE_CODE
         ,UNIT_NUMBER
         ,UNIT_DATE
         ,PATIENT_TYPE
         ,HOSPITAL_SERVICE_CODE
)
-- START LOOP TO SUM UP DETAIL TO THEN EXCLUDE 0 SUM TRANS
WHERE    TRANSACTION_AMOUNT <> 0
UNION ALL
SELECT    COMPANY_CODE
         ,ACCOUNT_NUMBER
         ,ACCOUNT_TYPE
         ,TRANSACTION_AMOUNT
         ,POSTING_DATE
         ,SERVICE_DATE
         ,ADMITING_DATE
         ,DISCHARGE_DATE
         ,(CASE WHEN TRANSACTION_AMOUNT < 0 THEN TRANSACTION_CODE
                ELSE '6000R'
          END) AS TRANSACTION_CODE
         ,TECHNICAL_DESCRIPTION
         ,FINANCIAL_CLASS
         ,TRANSACTION_INSURANCE_CODE
         ,TOTAL_CHARGES
         ,UNIT_NUMBER
         ,UNIT_DATE
         ,PATIENT_TYPE
         ,HOSPITAL_SERVICE_CODE
FROM
-- START LOOP TO SUM UP DETAIL TO THEN EXCLUDE 0 SUM TRANS
(
SELECT    COMPANY_CODE
         ,ACCOUNT_NUMBER
         ,ACCOUNT_TYPE
         ,SUM(TRANSACTION_AMOUNT) AS TRANSACTION_AMOUNT
         ,POSTING_DATE
         ,SERVICE_DATE
         ,ADMITING_DATE
         ,DISCHARGE_DATE
         ,TRANSACTION_CODE
         ,TECHNICAL_DESCRIPTION
         ,FINANCIAL_CLASS
         ,TRANSACTION_INSURANCE_CODE
         ,MAX(TOTAL_CHARGES) AS TOTAL_CHARGES
         ,UNIT_NUMBER
         ,UNIT_DATE
         ,PATIENT_TYPE
         ,HOSPITAL_SERVICE_CODE

FROM
(
SELECT    NVL(TDL.BILL_AREA_ID,620004096) AS COMPANY_CODE
         ,TDL.HSP_ACCOUNT_ID || '-' || TDL.TX_ID AS ACCOUNT_NUMBER
         ,'O' AS ACCOUNT_TYPE
         ,(TDL.BAD_DEBT_AR_AMOUNT * -1) AS TRANSACTION_AMOUNT
         ,To_Char(TDL.POST_DATE,'MM/DD/YYYY') AS POSTING_DATE
         ,To_Char(TDL.ORIG_SERVICE_DATE,'MM/DD/YYYY') AS SERVICE_DATE
         ,To_Char(TDL.ORIG_SERVICE_DATE,'MM/DD/YYYY') AS ADMITING_DATE
         ,To_Char(TDL.ORIG_SERVICE_DATE,'MM/DD/YYYY') AS DISCHARGE_DATE
         ,(CASE WHEN TDL.DETAIL_TYPE IN (2,5,11,32,33,3,12,4,6,13,30,31,1,10)
                  THEN CLARITY_EAP.PROC_CODE
                ELSE CLARITY_EAP2.PROC_CODE
          END) AS TRANSACTION_CODE
         ,(CASE WHEN TDL.DETAIL_TYPE IN (2,5,11,32,33,3,12,4,6,13,30,31,1,10)
                  THEN CLARITY_EAP.PROC_NAME
                ELSE CLARITY_EAP2.PROC_NAME
           END) AS TECHNICAL_DESCRIPTION
        ,(CASE WHEN TDL.DETAIL_TYPE NOT IN (20,21)
                 THEN ''
              ELSE (CASE WHEN GUAR.ACCOUNT_TYPE_C IN (4,104,108,112) THEN '900'
                         WHEN TDL.CUR_FIN_CLASS = 4 THEN ''
                         WHEN TDL.CUR_PLAN_ID IS NULL THEN ''
                         ELSE TO_CHAR(TDL.CUR_FIN_CLASS)
                   END)
         END) AS FINANCIAL_CLASS
        ,TDL.CUR_PLAN_ID AS TRANSACTION_INSURANCE_CODE
        ,(CASE WHEN TDL.DETAIL_TYPE NOT IN (20,21)
                THEN 0
              ELSE COALESCE(TDL.ORIG_AMT,0)
         END) AS TOTAL_CHARGES
        ,'' AS UNIT_NUMBER
        ,'' AS UNIT_DATE
        ,Nvl(SNP.ACCT_CLASS_HA_C,2) AS PATIENT_TYPE
        ,'' AS HOSPITAL_SERVICE_CODE

FROM       CLARITY.CLARITY_TDL_TRAN TDL
           LEFT JOIN CLARITY.ZC_DETAIL_TYPE             ON TDL.DETAIL_TYPE         = ZC_DETAIL_TYPE.DETAIL_TYPE
           LEFT JOIN CLARITY.CLARITY_EAP CLARITY_EAP    ON TDL.PROC_ID             = CLARITY_EAP.PROC_ID
           LEFT JOIN CLARITY.CLARITY_EAP CLARITY_EAP2   ON TDL.MATCH_PROC_ID       = CLARITY_EAP2.PROC_ID
           LEFT JOIN CLARITY.HSP_HAR_SNAPSHOT SNP       ON TDL.HSP_ACCOUNT_ID      = SNP.HSP_ACCOUNT_ID
                                                           AND TDL.POST_DATE BETWEEN TRUNC(SNP.SNAP_START_DATE) AND TRUNC(SNP.SNAP_END_DATE)
           LEFT JOIN CLARITY.ACCOUNT GUAR               ON TDL.ACCOUNT_ID          = GUAR.ACCOUNT_ID
where      tdl.detail_type = 21
      AND tdl.BAD_DEBT_AR_AMOUNT is not NULL
      AND TDL.BAD_DEBT_AR_AMOUNT <> 0
      AND TDL.POST_DATE = Trunc(SYSDATE)-1
      AND CLARITY_EAP2.proc_code IN ('6000','6001')   -- bad debt wo's only
)
-- END LOOP FOR DETAIL AT LINE ITEM
GROUP BY  COMPANY_CODE
         ,ACCOUNT_NUMBER
         ,ACCOUNT_TYPE
         ,POSTING_DATE
         ,SERVICE_DATE
         ,ADMITING_DATE
         ,DISCHARGE_DATE
         ,TRANSACTION_CODE
         ,TECHNICAL_DESCRIPTION
         ,FINANCIAL_CLASS
         ,TRANSACTION_INSURANCE_CODE
         ,UNIT_NUMBER
         ,UNIT_DATE
         ,PATIENT_TYPE
         ,HOSPITAL_SERVICE_CODE
)
WHERE    TRANSACTION_AMOUNT <> 0
;
